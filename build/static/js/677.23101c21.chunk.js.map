{"version":3,"file":"static/js/677.23101c21.chunk.js","mappings":"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","sources":["Pages/Dashboard.jsx"],"sourcesContent":["// src/pages/Dashboard.jsx - Fully Self-Contained Single File Version (with ₹ currency)\r\n\r\nimport React, { useEffect, useMemo, useRef, useCallback } from \"react\";\r\nimport axios from 'axios';\r\nimport { useQuery } from '@tanstack/react-query';\r\nimport { Paper, CircularProgress, Box } from \"@mui/material\";\r\nimport {\r\n    ResponsiveContainer, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip,\r\n} from 'recharts';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\n// ========================================================================\r\n// 1. STYLES: All styles from 'Dashboard.scss' are now here as a JS object\r\n// ========================================================================\r\nconst styles = {\r\n    dashboardUser: {\r\n        display: 'flex',\r\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\r\n    },\r\n    themeDark: {\r\n        backgroundColor: '#161921',\r\n        color: '#e0e0e0',\r\n        minHeight: '100vh',\r\n    },\r\n    sidebar: {\r\n        width: '240px',\r\n        backgroundColor: '#1f232d',\r\n        padding: '20px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        borderRight: '1px solid #333',\r\n    },\r\n    sidebarTitle: {\r\n        fontSize: '1.5rem',\r\n        fontWeight: 'bold',\r\n        marginBottom: '30px',\r\n        color: '#fff',\r\n    },\r\n    sidebarNav: {\r\n        flexGrow: 1,\r\n    },\r\n    sidebarLink: {\r\n        display: 'block',\r\n        color: '#a0a8c2',\r\n        textDecoration: 'none',\r\n        padding: '12px 0',\r\n        fontSize: '1rem',\r\n    },\r\n    logoutButton: {\r\n        width: '100%',\r\n        padding: '12px',\r\n        fontSize: '1rem',\r\n        backgroundColor: '#e53935',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n    },\r\n    dashboardMainContent: {\r\n        flex: 1,\r\n        padding: '2rem',\r\n    },\r\n    dashboardContentHeader: {\r\n        marginBottom: '2rem',\r\n    },\r\n    headerTitle: {\r\n        fontSize: '2.5rem',\r\n        fontWeight: 'bold',\r\n        margin: '0 0 10px 0',\r\n        color: '#fff',\r\n    },\r\n    headerSubtitle: {\r\n        fontSize: '1.1rem',\r\n        color: '#a0a8c2',\r\n        margin: 0,\r\n    },\r\n    headerStats: {\r\n        marginTop: '1rem',\r\n        display: 'flex',\r\n        gap: '2rem',\r\n        color: '#a0a8c2',\r\n    },\r\n    dashboardGridCards: {\r\n        display: 'grid',\r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\r\n        gap: '1.5rem',\r\n    },\r\n    dashboardCard: {\r\n        backgroundColor: '#1f232d',\r\n        padding: '25px',\r\n        borderRadius: '10px',\r\n        color: '#e0e0e0',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        boxShadow: '0 4px 12px rgba(0,0,0,0.1)',\r\n    },\r\n    cardHeader: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        marginBottom: '1rem',\r\n    },\r\n    cardTitle: {\r\n        margin: 0,\r\n        fontSize: '1.1rem',\r\n        fontWeight: '600',\r\n    },\r\n    dataSource: {\r\n        fontSize: '0.8rem',\r\n        color: '#a0a8c2',\r\n    },\r\n    cardBody: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    amount: {\r\n        fontSize: '2.2rem',\r\n        fontWeight: 'bold',\r\n        margin: '0 0 5px 0',\r\n        color: '#fff',\r\n    },\r\n    change: {\r\n        fontSize: '0.9rem',\r\n        margin: 0,\r\n        color: '#00b929',\r\n    },\r\n    chartContainerLine: {\r\n        flexGrow: 1,\r\n        minHeight: '120px',\r\n        marginTop: '1rem',\r\n    },\r\n    chartNoData: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        height: '100%',\r\n        color: '#a0a8c2',\r\n    },\r\n    transactionItem: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: '8px 0',\r\n        borderTop: '1px solid #333',\r\n    },\r\n    customTooltip: {\r\n        backgroundColor: 'rgba(31, 35, 45, 0.9)',\r\n        border: '1px solid #444',\r\n        padding: '10px',\r\n        borderRadius: '5px',\r\n        color: '#fff',\r\n    },\r\n};\r\n\r\nconst Sidebar = ({ setIsAuthenticated }) => {\r\n    const navigate = useNavigate();\r\n    const handleLogout = () => { localStorage.removeItem(\"authToken\"); localStorage.removeItem(\"userData\"); setIsAuthenticated(false); navigate(\"/login\", { replace: true }); };\r\n   \r\n};\r\n\r\nconst initializeFirebaseMessaging = async () => { console.log(\"Mock Firebase Messaging Initialized.\"); return Promise.resolve(\"mock-firebase-token-12345\"); };\r\n\r\nconst api = axios.create({ baseURL: process.env.REACT_APP_API_BASE_URL, headers: { 'Content-Type': 'application/json' }});\r\napi.interceptors.request.use((config) => { const token = localStorage.getItem('authToken'); if (token) { config.headers['Authorization'] = `Bearer ${token}`; } return config; }, (error) => Promise.reject(error));\r\n\r\nconst optimizedQueryConfig = { staleTime: 300000, cacheTime: 600000, refetchOnWindowFocus: false, refetchOnMount: false, retry: 1, retryDelay: 1000 };\r\n\r\nconst MemoizedLineChart = React.memo(({ data, dataKey, stroke, name, yAxisFormatter }) => {\r\n    if (!data || data.length === 0) return <div style={styles.chartNoData}><p>No data available</p></div>;\r\n    return (\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n            <LineChart data={data} margin={{ top: 20, right: 20, left: -10, bottom: 5 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"rgba(255, 255, 255, 0.08)\" vertical={false} />\r\n                <XAxis dataKey={name === 'investment' ? 'name' : 'year'} tick={{ fill: '#a0a8c2' }} axisLine={false} tickLine={false} />\r\n                <YAxis tick={{ fill: '#a0a8c2' }} axisLine={false} tickLine={false} tickFormatter={yAxisFormatter} />\r\n                <Tooltip content={<CustomTooltip />} cursor={{ stroke: `rgba(${stroke === '#8a7cff' ? '138, 124, 255' : '0, 185, 41'}, 0.3)`, strokeWidth: 2 }} />\r\n                <Line type=\"monotone\" dataKey={dataKey} stroke={stroke} strokeWidth={3} dot={{ r: 4, strokeWidth: 2, fill: '#fff' }} activeDot={{ r: 8, stroke: stroke, fill: '#fff' }} />\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    );\r\n});\r\nMemoizedLineChart.displayName = 'MemoizedLineChart';\r\n\r\nconst DashboardCard = React.memo(({ title, amount, isLoading, error, chart, cardStyle, dataSource, changeText }) => (\r\n    <Paper component=\"article\" style={{...styles.dashboardCard, ...cardStyle}}>\r\n        <div style={styles.cardHeader}>\r\n            <h3 style={styles.cardTitle}>{title}</h3>\r\n            {dataSource && <span style={styles.dataSource}>{dataSource}</span>}\r\n        </div>\r\n        <div style={styles.cardBody}>\r\n            {/* UPDATED: Fallback text is now '₹0' */}\r\n            <p style={styles.amount}>{isLoading ? \"Loading...\" : error ? \"Error\" : amount || '₹0'}</p>\r\n            {changeText && <p style={styles.change}>{changeText}</p>}\r\n            {chart && <div style={styles.chartContainerLine}>{chart}</div>}\r\n        </div>\r\n    </Paper>\r\n));\r\nDashboardCard.displayName = 'DashboardCard';\r\n\r\nconst fetchTotalInvestment = async () => { try { const res = await api.get('/api/users/total-investment'); return res.data; } catch (e) { console.error('Error fetching total investment:', e); return { totalInvestment: 0 }; }};\r\nconst fetchTotalProfit = async () => { try { const res = await api.get('/api/users/total-profit-loss'); return res.data; } catch (e) { console.error('Error fetching total profit:', e); return { totalProfitOrLoss: 0 }; }};\r\nconst fetchMonthlyInvestmentData = async () => { try { const res = await api.get('/api/users/monthly-investment-data'); return res.data; } catch (e) { console.error('Error fetching monthly investment data:', e); return { monthlyData: [] }; }};\r\nconst fetchYearlyProfitData = async () => { try { const res = await api.get('/api/users/yearly-profit-data'); return res.data; } catch (e) { console.error('Error fetching yearly profit data:', e); return { yearlyData: [] }; }};\r\nconst fetchPortfolioPerformance = async () => { try { const res = await api.get('/api/users/portfolio-performance'); return res.data; } catch (e) { console.error('Error fetching portfolio performance:', e); return { performance: 0, trend: 'Stable' }; }};\r\nconst fetchRecentTransactions = async () => { try { const res = await api.get('/api/users/recent-transactions'); return res.data; } catch (e) { console.error('Error fetching recent transactions:', e); return { transactions: [] }; }};\r\n\r\nconst generateRepresentativeChartData = (total, labels, dataKey, labelKey) => { if (!total) { return labels.map(label => ({ [labelKey]: label, [dataKey]: 0 })); } const points = labels.length === 6 ? [0.05, 0.15, 0.1, 0.25, 0.2, 0.25] : [0.2, 0.4, 0.4]; return labels.map((label, index) => ({ [labelKey]: label, [dataKey]: Math.round(points[index % points.length] * total) })); };\r\nconst processMonthlyData = (apiData, fallback) => { if (apiData?.monthlyData?.length > 0) return apiData.monthlyData.map(item => ({ name: item.month, investment: item.amount })); return generateRepresentativeChartData(apiData?.totalInvestment || fallback, ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'], 'investment', 'name'); };\r\nconst processYearlyData = (apiData, fallback) => { if (apiData?.yearlyData?.length > 0) return apiData.yearlyData.map(item => ({ year: item.year, profit: item.profit })); return generateRepresentativeChartData(apiData?.totalProfit || fallback, [\"2022\", \"2023\", \"2024\"], 'profit', 'year'); };\r\n\r\nconst parseJwt = (token) => { try { return JSON.parse(atob(token.split('.')[1])); } catch (e) { return null; }};\r\nconst useJWTAuth = () => { const [authState, setAuthState] = React.useState({ isAuthenticated: false, currentUser: null, loading: true }); React.useEffect(() => { try { const token = localStorage.getItem(\"authToken\"), data = localStorage.getItem(\"userData\"); if (token && data) { const payload = parseJwt(token); if (payload && payload.exp * 1000 > Date.now()) { setAuthState({ isAuthenticated: true, currentUser: JSON.parse(data), loading: false }); return; } } setAuthState({ isAuthenticated: false, currentUser: null, loading: false }); } catch (e) { setAuthState({ isAuthenticated: false, currentUser: null, loading: false }); } }, []); return authState; };\r\n\r\nconst CustomTooltip = React.memo(({ active, payload, label }) => {\r\n    if (active && payload?.length) {\r\n        // UPDATED: Formatter now uses INR for the tooltip\r\n        const formatCurrency = (v) => new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR', minimumFractionDigits: 0, maximumFractionDigits: 0 }).format(v || 0);\r\n        return (<div style={styles.customTooltip}><p>{label}</p><p>{`${payload[0].name}: ${formatCurrency(payload[0].value)}`}</p></div>);\r\n    }\r\n    return null;\r\n});\r\nCustomTooltip.displayName = 'CustomTooltip';\r\n\r\nconst Dashboard = ({ setIsAuthenticated }) => {\r\n    const { currentUser, isAuthenticated, loading } = useJWTAuth();\r\n    const navigate = useNavigate();\r\n    const hasRedirected = useRef(false);\r\n    const messagingInitialized = useRef(false);\r\n\r\n    // UPDATED: Currency formatter now uses INR (Indian Rupee)\r\n    const formatCurrency = useCallback((v) => new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR', minimumFractionDigits: 0, maximumFractionDigits: 0 }).format(v || 0), []);\r\n    // UPDATED: Y-axis formatter now uses ₹\r\n    const yAxisFormatter = useCallback((v) => `₹${Math.round(v / 1000)}k`, []);\r\n\r\n    useEffect(() => { if (isAuthenticated && currentUser && !messagingInitialized.current) { messagingInitialized.current = true; initializeFirebaseMessaging(); } }, [isAuthenticated, currentUser]);\r\n\r\n    const { data: totalInvestmentData, isLoading: isLoadingInvestment, error: investmentError } = useQuery({ queryKey: ['totalInvestment', currentUser?.id], queryFn: fetchTotalInvestment, enabled: !!currentUser, ...optimizedQueryConfig });\r\n    const { data: totalProfitData, isLoading: isLoadingProfit, error: profitError } = useQuery({ queryKey: ['totalProfit', currentUser?.id], queryFn: fetchTotalProfit, enabled: !!currentUser, ...optimizedQueryConfig });\r\n    const { data: monthlyInvestmentData, isLoading: isLoadingMonthlyInvestment } = useQuery({ queryKey: ['monthlyInvestment', currentUser?.id], queryFn: fetchMonthlyInvestmentData, enabled: !!currentUser, ...optimizedQueryConfig });\r\n    const { data: yearlyProfitData, isLoading: isLoadingYearlyProfit } = useQuery({ queryKey: ['yearlyProfit', currentUser?.id], queryFn: fetchYearlyProfitData, enabled: !!currentUser, ...optimizedQueryConfig });\r\n    const { data: portfolioPerformanceData, isLoading: isLoadingPortfolio } = useQuery({ queryKey: ['portfolioPerformance', currentUser?.id], queryFn: fetchPortfolioPerformance, enabled: !!currentUser, ...optimizedQueryConfig });\r\n    const { data: recentTransactionsData, isLoading: isLoadingTransactions } = useQuery({ queryKey: ['recentTransactions', currentUser?.id], queryFn: fetchRecentTransactions, enabled: !!currentUser, ...optimizedQueryConfig });\r\n\r\n    const investmentChartData = useMemo(() => processMonthlyData(monthlyInvestmentData, totalInvestmentData?.totalInvestment), [monthlyInvestmentData, totalInvestmentData]);\r\n    const profitChartData = useMemo(() => processYearlyData(yearlyProfitData, totalProfitData?.totalProfitOrLoss), [yearlyProfitData, totalProfitData]);\r\n    const totalPortfolioValue = useMemo(() => (totalInvestmentData?.totalInvestment || 0) + (totalProfitData?.totalProfitOrLoss || 0), [totalInvestmentData, totalProfitData]);\r\n    const recentTransactionCount = useMemo(() => recentTransactionsData?.transactions?.length || 0, [recentTransactionsData]);\r\n\r\n    const investmentChart = useMemo(() => <MemoizedLineChart data={investmentChartData} dataKey=\"investment\" stroke=\"#8a7cff\" name=\"investment\" yAxisFormatter={yAxisFormatter} />, [investmentChartData, yAxisFormatter]);\r\n    const profitChart = useMemo(() => <MemoizedLineChart data={profitChartData} dataKey=\"profit\" stroke=\"#00b929\" name=\"profit\" yAxisFormatter={yAxisFormatter} />, [profitChartData, yAxisFormatter]);\r\n\r\n    useEffect(() => { if (!loading && !isAuthenticated && !hasRedirected.current) { hasRedirected.current = true; navigate(\"/login\", { replace: true }); } }, [isAuthenticated, loading, navigate]);\r\n\r\n    if (loading) return <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', backgroundColor: '#161921' }}><CircularProgress /></Box>;\r\n    if (!isAuthenticated || !currentUser) return null;\r\n\r\n    return (\r\n        <div style={{...styles.dashboardUser, ...styles.themeDark}}>\r\n            <Sidebar setIsAuthenticated={setIsAuthenticated} />\r\n            <main style={styles.dashboardMainContent}>\r\n                <header style={styles.dashboardContentHeader}>\r\n                    <h2 style={styles.headerTitle}>Dashboard</h2>\r\n                    <p style={styles.headerSubtitle}>Welcome back, {currentUser?.displayName || currentUser?.name || \"User\"}!</p>\r\n                    <div style={styles.headerStats}>\r\n                        <span>Portfolio Value: {formatCurrency(totalPortfolioValue)}</span>\r\n                        <span>Recent Transactions: {recentTransactionCount}</span>\r\n                    </div>\r\n                </header>\r\n                <div style={styles.dashboardGridCards}>\r\n                    <DashboardCard title=\"Total Investment\" amount={formatCurrency(totalInvestmentData?.totalInvestment)} isLoading={isLoadingInvestment} error={investmentError} chart={investmentChart} dataSource={isLoadingMonthlyInvestment ? \"Loading...\" : \"Monthly Breakdown\"} />\r\n                    <DashboardCard title=\"Total Profit\" amount={formatCurrency(totalProfitData?.totalProfitOrLoss)} isLoading={isLoadingProfit} error={profitError} chart={profitChart} dataSource={isLoadingYearlyProfit ? \"Loading...\" : \"Yearly Breakdown\"} changeText=\"Represents your total earnings.\" />\r\n                    \r\n                    <Paper component=\"article\" style={styles.dashboardCard}>\r\n                        <div style={styles.cardHeader}><h3 style={styles.cardTitle}>Recent Activity</h3></div>\r\n                        <div style={styles.cardBody}>\r\n                            <p style={styles.amount}>{recentTransactionCount}</p>\r\n                            <p style={styles.change}>Recent transactions</p>\r\n                            {isLoadingTransactions ? <p>Loading...</p> : (recentTransactionsData?.transactions?.slice(0, 3).map((t, i) => (<div key={t.id || i} style={styles.transactionItem}><span>{t.type}</span><span>{formatCurrency(t.amount)}</span></div>)))}\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;"],"names":["styles","dashboardUser","display","fontFamily","themeDark","backgroundColor","color","minHeight","sidebar","width","padding","flexDirection","borderRight","sidebarTitle","fontSize","fontWeight","marginBottom","sidebarNav","flexGrow","sidebarLink","textDecoration","logoutButton","border","borderRadius","cursor","dashboardMainContent","flex","dashboardContentHeader","headerTitle","margin","headerSubtitle","headerStats","marginTop","gap","dashboardGridCards","gridTemplateColumns","dashboardCard","boxShadow","cardHeader","justifyContent","alignItems","cardTitle","dataSource","cardBody","amount","change","chartContainerLine","chartNoData","height","transactionItem","borderTop","customTooltip","Sidebar","_ref","setIsAuthenticated","useNavigate","api","axios","create","baseURL","process","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","optimizedQueryConfig","staleTime","cacheTime","refetchOnWindowFocus","refetchOnMount","retry","retryDelay","MemoizedLineChart","React","_ref2","data","dataKey","stroke","name","yAxisFormatter","length","_jsx","ResponsiveContainer","children","_jsxs","LineChart","top","right","left","bottom","CartesianGrid","strokeDasharray","vertical","XAxis","tick","fill","axisLine","tickLine","YAxis","tickFormatter","Tooltip","content","CustomTooltip","strokeWidth","Line","type","dot","r","activeDot","style","displayName","DashboardCard","_ref3","title","isLoading","chart","cardStyle","changeText","Paper","component","fetchTotalInvestment","async","get","e","console","totalInvestment","fetchTotalProfit","totalProfitOrLoss","fetchMonthlyInvestmentData","monthlyData","fetchYearlyProfitData","yearlyData","fetchPortfolioPerformance","performance","trend","fetchRecentTransactions","transactions","generateRepresentativeChartData","total","labels","labelKey","map","label","points","index","Math","round","useJWTAuth","authState","setAuthState","isAuthenticated","currentUser","loading","payload","JSON","parse","atob","split","parseJwt","exp","Date","now","_ref4","active","formatCurrency","v","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","value","_ref5","_recentTransactionsDa2","navigate","hasRedirected","useRef","messagingInitialized","useCallback","useEffect","current","log","resolve","initializeFirebaseMessaging","totalInvestmentData","isLoadingInvestment","investmentError","useQuery","queryKey","id","queryFn","enabled","totalProfitData","isLoadingProfit","profitError","monthlyInvestmentData","isLoadingMonthlyInvestment","yearlyProfitData","isLoadingYearlyProfit","portfolioPerformanceData","isLoadingPortfolio","recentTransactionsData","isLoadingTransactions","investmentChartData","useMemo","processMonthlyData","apiData","fallback","_apiData$monthlyData","item","month","investment","profitChartData","processYearlyData","_apiData$yearlyData","year","profit","totalProfit","totalPortfolioValue","recentTransactionCount","_recentTransactionsDa","investmentChart","profitChart","replace","Box","sx","CircularProgress","slice","t","i"],"sourceRoot":""}