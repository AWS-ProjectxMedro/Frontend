{"version":3,"file":"static/js/837.8e230e5e.chunk.js","mappings":"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","sources":["Component/dashboard/Withdrawal.jsx"],"sourcesContent":["// src/Component/dashboard/Withdrawal.jsx\r\n// *** UPDATED FILE WITH API INTEGRATION ***\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport './Style/Withdrawal.scss';\r\n\r\nconst baseURL = process.env.REACT_APP_PAYMENT_API_BASE_URL;\r\n\r\nconst Withdrawal = () => {\r\n    const navigate = useNavigate();\r\n    const [form, setForm] = useState({\r\n        amount: '',\r\n        bankAccount: '',\r\n        accountHolder: '',\r\n        ifscCode: '',\r\n        reason: ''\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [userBalance, setUserBalance] = useState(0);\r\n    const [withdrawalHistory, setWithdrawalHistory] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchUserBalance();\r\n        fetchWithdrawalHistory();\r\n    }, []);\r\n\r\n    const fetchUserBalance = async () => {\r\n        try {\r\n            const token = localStorage.getItem('authToken');\r\n            const response = await axios.get(`${baseURL}/api/users/balance`, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            setUserBalance(response.data.balance || 0);\r\n        } catch (error) {\r\n            console.error('Error fetching balance:', error);\r\n            toast.error('Failed to fetch account balance');\r\n        }\r\n    };\r\n\r\n    const fetchWithdrawalHistory = async () => {\r\n        try {\r\n            const token = localStorage.getItem('authToken');\r\n            const response = await axios.get(`${baseURL}/api/withdrawals/my`, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n            \r\n            // Handle different possible response structures\r\n            const withdrawals = response.data.withdrawals || response.data.data || response.data || [];\r\n            setWithdrawalHistory(Array.isArray(withdrawals) ? withdrawals : []);\r\n        } catch (error) {\r\n            console.error('Error fetching withdrawal history:', error);\r\n            toast.error('Failed to fetch withdrawal history');\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        setForm({ ...form, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (parseFloat(form.amount) > userBalance) {\r\n            toast.error('Insufficient balance for withdrawal');\r\n            return;\r\n        }\r\n\r\n        if (parseFloat(form.amount) < 100) {\r\n            toast.error('Minimum withdrawal amount is â‚¹100');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const token = localStorage.getItem('authToken');\r\n            const payload = {\r\n                amount: parseFloat(form.amount),\r\n                bankAccount: form.bankAccount,\r\n                accountHolder: form.accountHolder,\r\n                ifscCode: form.ifscCode,\r\n                reason: form.reason || 'Withdrawal request'\r\n            };\r\n\r\n            const response = await axios.post(`${baseURL}/api/withdrawals`, payload, {\r\n                headers: { \r\n                    Authorization: `Bearer ${token}`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            toast.success(response.data.message || 'Withdrawal request submitted successfully!');\r\n            \r\n            // Reset form\r\n            setForm({\r\n                amount: '',\r\n                bankAccount: '',\r\n                accountHolder: '',\r\n                ifscCode: '',\r\n                reason: ''\r\n            });\r\n            \r\n            // Refresh data\r\n            fetchUserBalance();\r\n            fetchWithdrawalHistory();\r\n            \r\n        } catch (error) {\r\n            console.error('Withdrawal error:', error);\r\n            const errorMessage = error.response?.data?.message || \r\n                               error.response?.data?.error || \r\n                               'Failed to submit withdrawal request';\r\n            toast.error(errorMessage);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const getStatusColor = (status) => {\r\n        switch (status?.toLowerCase()) {\r\n            case 'approved':\r\n            case 'completed':\r\n            case 'success':\r\n                return '#4CAF50';\r\n            case 'pending':\r\n            case 'processing':\r\n                return '#FF9800';\r\n            case 'rejected':\r\n            case 'failed':\r\n            case 'cancelled':\r\n                return '#F44336';\r\n            default:\r\n                return '#757575';\r\n        }\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        try {\r\n            return new Date(dateString).toLocaleDateString('en-US', {\r\n                year: 'numeric',\r\n                month: 'short',\r\n                day: 'numeric',\r\n                hour: '2-digit',\r\n                minute: '2-digit'\r\n            });\r\n        } catch (error) {\r\n            return 'Invalid Date';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"withdrawal-page-container\">\r\n            <div className=\"withdrawal-content-area\">\r\n                <div className=\"withdrawal-central-hub\">\r\n                    <h2 className=\"withdrawal-title\">Withdrawal Request</h2>\r\n                    \r\n                    <div className=\"withdrawal-balance-display\">\r\n                        <span className=\"withdrawal-balance-text\">Available Balance:</span>\r\n                        <span className=\"withdrawal-balance-value\">â‚¹{userBalance.toFixed(2)}</span>\r\n                    </div>\r\n\r\n                    <div className=\"withdrawal-form-wrapper\">\r\n                        <form onSubmit={handleSubmit} className=\"withdrawal-form\">\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"amount\">Withdrawal Amount (INR):</label>\r\n                                <input\r\n                                    type=\"number\"\r\n                                    name=\"amount\"\r\n                                    id=\"amount\"\r\n                                    value={form.amount}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Enter amount to withdraw\"\r\n                                    min=\"100\"\r\n                                    max={userBalance}\r\n                                    step=\"0.01\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"accountHolder\">Account Holder Name:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"accountHolder\"\r\n                                    id=\"accountHolder\"\r\n                                    value={form.accountHolder}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Enter account holder name\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"bankAccount\">Bank Account Number:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"bankAccount\"\r\n                                    id=\"bankAccount\"\r\n                                    value={form.bankAccount}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Enter bank account number\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"ifscCode\">IFSC Code:</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"ifscCode\"\r\n                                    id=\"ifscCode\"\r\n                                    value={form.ifscCode}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Enter IFSC code (e.g. SBIN0001234)\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"reason\">Reason for Withdrawal:</label>\r\n                                <textarea\r\n                                    name=\"reason\"\r\n                                    id=\"reason\"\r\n                                    value={form.reason}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Enter reason for withdrawal (optional)\"\r\n                                    rows=\"3\"\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"withdrawal-action-button-container\">\r\n                                <button \r\n                                    type=\"submit\" \r\n                                    className=\"withdrawal-submit-button\" \r\n                                    disabled={loading || !form.amount || !form.bankAccount || !form.accountHolder || !form.ifscCode}\r\n                                >\r\n                                    {loading ? (\r\n                                        <>\r\n                                            <span className=\"withdrawal-activity-indicator\"></span>\r\n                                            <span>Processing...</span>\r\n                                        </>\r\n                                    ) : (\r\n                                        `Request Withdrawal ${form.amount ? `â‚¹${form.amount}` : ''}`\r\n                                    )}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    {withdrawalHistory.length > 0 && (\r\n                        <div className=\"withdrawal-history-section\">\r\n                            <h3>Withdrawal History</h3>\r\n                            <div className=\"withdrawal-history-list\">\r\n                                {withdrawalHistory.map((withdrawal, index) => (\r\n                                    <div key={withdrawal.id || index} className=\"withdrawal-history-item\">\r\n                                        <div className=\"withdrawal-history-info\">\r\n                                            <span className=\"withdrawal-amount\">\r\n                                                â‚¹{withdrawal.amount || '0.00'}\r\n                                            </span>\r\n                                            <span className=\"withdrawal-date\">\r\n                                                {formatDate(withdrawal.createdAt || withdrawal.created_at)}\r\n                                            </span>\r\n                                            {withdrawal.reason && (\r\n                                                <span className=\"withdrawal-reason\">\r\n                                                    {withdrawal.reason}\r\n                                                </span>\r\n                                            )}\r\n                                        </div>\r\n                                        <div \r\n                                            className=\"withdrawal-status\"\r\n                                            style={{ color: getStatusColor(withdrawal.status) }}\r\n                                        >\r\n                                            {withdrawal.status || 'Pending'}\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {withdrawalHistory.length === 0 && (\r\n                        <div className=\"withdrawal-no-history\">\r\n                            <p>No withdrawal history found.</p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Withdrawal;"],"names":["baseURL","process","Withdrawal","useNavigate","form","setForm","useState","amount","bankAccount","accountHolder","ifscCode","reason","loading","setLoading","userBalance","setUserBalance","withdrawalHistory","setWithdrawalHistory","useEffect","fetchUserBalance","fetchWithdrawalHistory","async","token","localStorage","getItem","response","axios","get","headers","Authorization","data","balance","error","console","toast","withdrawals","Array","isArray","handleChange","e","target","name","value","getStatusColor","status","toLowerCase","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","_jsx","className","children","_jsxs","toFixed","onSubmit","preventDefault","parseFloat","payload","post","success","message","_error$response","_error$response$data","_error$response2","_error$response2$data","errorMessage","htmlFor","type","id","onChange","placeholder","min","max","step","required","rows","disabled","_Fragment","length","map","withdrawal","index","createdAt","created_at","style","color"],"sourceRoot":""}