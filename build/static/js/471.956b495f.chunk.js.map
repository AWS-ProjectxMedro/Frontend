{"version":3,"file":"static/js/471.956b495f.chunk.js","mappings":"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","sources":["Component/AdminDashboard/transcation.jsx","Component/AdminDashboard/AdminSidebar.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport SidebarAdmin from './AdminSidebar'; // Assuming this component exists\r\nimport './Style/Transaction.scss'; // Make sure this SCSS file exists and is styled\r\n\r\n// --- CONFIGURATION ---\r\n// Note: You are now using a public IP. Ensure REACT_APP_API_BASE_URL is set to this in your .env\r\n\r\nconst baseUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\n// For user-specific transactions (Daily, Weekly, etc.)\r\nconst USER_ID_FOR_ADMIN_VIEW = 1; // This remains for the period-based user transactions\r\nconst AUTH_TOKEN_KEY = 'authToken';\r\n\r\nconst getAuthToken = () => {\r\n  const token = localStorage.getItem(AUTH_TOKEN_KEY);\r\n  return token;\r\n};\r\n\r\nconst formatDate = (dateString) => {\r\n  if (!dateString) return 'N/A';\r\n  try {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  } catch (e) {\r\n    console.error(\"Error formatting date:\", dateString, e);\r\n    return \"Invalid Date\";\r\n  }\r\n};\r\n\r\n// Reusable Transaction Table Component - Now more flexible\r\nconst TransactionTable = ({ transactions, periodTitle, isLoading, showUserName = false }) => {\r\n  if (isLoading) {\r\n    return <p className=\"loading-message\">Loading {periodTitle} transactions...</p>;\r\n  }\r\n\r\n  if (typeof transactions === 'string') {\r\n    return <p className=\"info-message\">{transactions}</p>;\r\n  }\r\n\r\n  if (!Array.isArray(transactions) || transactions.length === 0) {\r\n    return <p className=\"info-message\">No {periodTitle.toLowerCase()} transactions found.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"transaction-table-container\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            {showUserName && <th>User Name</th>} {/* Conditionally show User Name */}\r\n            <th>Plan Name</th>\r\n            <th>Amount</th>\r\n            <th>Status</th>\r\n            <th>Date</th>\r\n            {!showUserName && <th>User ID</th>} {/* Show User ID if not showing User Name column */}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map((transaction) => (\r\n            <tr key={transaction.id}>\r\n              <td data-label=\"ID\">{transaction.id}</td>\r\n              {showUserName && <td data-label=\"User Name\">{transaction.User?.name || 'N/A'}</td>}\r\n              <td data-label=\"Plan Name\">{transaction.Plan?.name || 'N/A'}</td>\r\n              <td data-label=\"Amount\">${transaction.amount?.toFixed(2) || '0.00'}</td>\r\n              <td data-label=\"Status\">\r\n                <span className={`status-badge status-${transaction.status?.toLowerCase() || 'unknown'}`}>\r\n                  {transaction.status || 'N/A'}\r\n                </span>\r\n              </td>\r\n              <td data-label=\"Date\">{formatDate(transaction.createdAt)}</td>\r\n              {!showUserName && <td data-label=\"User ID\">{transaction.userId}</td>}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AdminTransactionPage = () => {\r\n  const [transactionData, setTransactionData] = useState({\r\n    daily: null,\r\n    weekly: null,\r\n    monthly: null,\r\n    yearly: null,\r\n    all: null, // New state for all transactions\r\n  });\r\n  const [loadingStates, setLoadingStates] = useState({\r\n    daily: true,\r\n    weekly: true,\r\n    monthly: true,\r\n    yearly: true,\r\n    all: true, // New loading state\r\n  });\r\n  const [activeTab, setActiveTab] = useState('daily'); // Default tab\r\n  const [globalError, setGlobalError] = useState(null);\r\n\r\n  if (!baseUrl) {\r\n    console.error(\"FATAL ERROR: REACT_APP_API_BASE_URL is not defined. API calls will fail. Make sure it's set in your .env file and the development server is restarted.\");\r\n  }\r\n\r\n  // Fetch user-specific transactions by period\r\n  const fetchUserTransactionsByPeriod = useCallback(async (period, token) => {\r\n    if (!token) {\r\n      // This case should ideally be caught by the useEffect token check\r\n      setTransactionData(prev => ({ ...prev, [period]: \"Authentication required.\" }));\r\n      setLoadingStates(prev => ({ ...prev, [period]: false }));\r\n      return;\r\n    }\r\n    if (!baseUrl) {\r\n      setTransactionData(prev => ({ ...prev, [period]: \"API configuration error.\" }));\r\n      setLoadingStates(prev => ({ ...prev, [period]: false }));\r\n      return;\r\n    }\r\n\r\n    setLoadingStates(prev => ({ ...prev, [period]: true }));\r\n    setTransactionData(prev => ({ ...prev, [period]: null }));\r\n\r\n    const apiUrl = `${baseUrl}/api/transactions/user/${USER_ID_FOR_ADMIN_VIEW}?period=${period}`;\r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        headers: { 'Authorization': `Bearer ${token}`, 'Content-Type': 'application/json' },\r\n      });\r\n\r\n      if (response.status === 401 || response.status === 403) {\r\n        setGlobalError(\"Authentication failed or session expired. Please log in again.\");\r\n        localStorage.removeItem(AUTH_TOKEN_KEY);\r\n        setTransactionData(prev => ({ ...prev, [period]: \"Access Denied. Please re-login.\" }));\r\n        return;\r\n      }\r\n      const responseText = await response.text();\r\n      let data;\r\n      try { data = JSON.parse(responseText); } catch (e) {\r\n        console.error(`Error parsing JSON for ${period} from ${apiUrl}. Status: ${response.status}. Response:`, responseText);\r\n        throw new Error(`Server returned non-JSON data. Status: ${response.status}.`);\r\n      }\r\n      if (response.status === 404 && data.message) {\r\n        setTransactionData(prev => ({ ...prev, [period]: data.message }));\r\n      } else if (!response.ok) {\r\n        throw new Error(data.message || `Failed to fetch ${period} transactions (Status: ${response.status})`);\r\n      } else {\r\n        setTransactionData(prev => ({ ...prev, [period]: data }));\r\n      }\r\n    } catch (err) {\r\n      setTransactionData(prev => ({ ...prev, [period]: `Error loading ${period} data: ${err.message}` }));\r\n    } finally {\r\n      setLoadingStates(prev => ({ ...prev, [period]: false }));\r\n    }\r\n  }, [baseUrl]);\r\n\r\n\r\n  // Fetch ALL system transactions\r\n  const fetchAllSystemTransactions = useCallback(async (token) => {\r\n    const periodKey = 'all'; // Using 'all' as the key for this data\r\n    if (!token) {\r\n        setTransactionData(prev => ({ ...prev, [periodKey]: \"Authentication required.\" }));\r\n        setLoadingStates(prev => ({ ...prev, [periodKey]: false }));\r\n        return;\r\n    }\r\n    if (!baseUrl) {\r\n        setTransactionData(prev => ({ ...prev, [periodKey]: \"API configuration error.\" }));\r\n        setLoadingStates(prev => ({ ...prev, [periodKey]: false }));\r\n        return;\r\n    }\r\n\r\n    setLoadingStates(prev => ({ ...prev, [periodKey]: true }));\r\n    setTransactionData(prev => ({ ...prev, [periodKey]: null }));\r\n\r\n    const apiUrl = `${baseUrl}/api/transactions`; // The new API endpoint\r\n    // console.log(`Fetching ALL transactions from: ${apiUrl} with token: ${token ? 'present' : 'absent'}`);\r\n\r\n    try {\r\n      const response = await fetch(apiUrl, {\r\n        headers: { 'Authorization': `Bearer ${token}`, 'Content-Type': 'application/json' },\r\n      });\r\n\r\n      if (response.status === 401 || response.status === 403) {\r\n        setGlobalError(\"Authentication failed or session expired. Please log in again.\");\r\n        localStorage.removeItem(AUTH_TOKEN_KEY);\r\n        setTransactionData(prev => ({ ...prev, [periodKey]: \"Access Denied. Please re-login.\" }));\r\n        return;\r\n      }\r\n      const responseText = await response.text();\r\n      let data;\r\n      try { data = JSON.parse(responseText); } catch (e) {\r\n        console.error(`Error parsing JSON for ALL transactions from ${apiUrl}. Status: ${response.status}. Response:`, responseText);\r\n        throw new Error(`Server returned non-JSON data. Status: ${response.status}.`);\r\n      }\r\n\r\n      if (!response.ok) { // For any error, including 404 if your API returns that for no transactions at all\r\n        throw new Error(data.message || `Failed to fetch all transactions (Status: ${response.status})`);\r\n      } else {\r\n        // Check if data is an array and not empty, otherwise show \"No transactions found\"\r\n        if (Array.isArray(data) && data.length === 0) {\r\n            setTransactionData(prev => ({ ...prev, [periodKey]: \"No transactions found in the system.\"}));\r\n        } else {\r\n            setTransactionData(prev => ({ ...prev, [periodKey]: data }));\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(`Error during fetch or processing for ALL transactions:`, err);\r\n      setTransactionData(prev => ({ ...prev, [periodKey]: `Error loading all transactions: ${err.message}` }));\r\n    } finally {\r\n      setLoadingStates(prev => ({ ...prev, [periodKey]: false }));\r\n    }\r\n  }, [baseUrl]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!baseUrl) {\r\n        setGlobalError(\"API URL is not configured. Please contact support or check .env file.\");\r\n        // Initialize all loading states to false and set error messages\r\n        const initialLoadingStates = { daily: false, weekly: false, monthly: false, yearly: false, all: false };\r\n        const initialTransactionData = {};\r\n        Object.keys(initialLoadingStates).forEach(p => {\r\n            initialTransactionData[p] = \"Configuration Error\";\r\n        });\r\n        setLoadingStates(initialLoadingStates);\r\n        setTransactionData(initialTransactionData);\r\n        return;\r\n    }\r\n\r\n    const token = getAuthToken();\r\n    if (!token) {\r\n      setGlobalError(\"Authentication token not found. Please log in to view transactions.\");\r\n      const initialLoadingStates = { daily: false, weekly: false, monthly: false, yearly: false, all: false };\r\n      const initialTransactionData = {};\r\n      Object.keys(initialLoadingStates).forEach(p => {\r\n          initialTransactionData[p] = \"Authentication required.\";\r\n      });\r\n      setLoadingStates(initialLoadingStates);\r\n      setTransactionData(initialTransactionData);\r\n      return;\r\n    }\r\n\r\n    setGlobalError(null);\r\n\r\n    // Fetch period-based transactions\r\n    const periods = ['daily', 'weekly', 'monthly', 'yearly'];\r\n    periods.forEach(period => {\r\n      fetchUserTransactionsByPeriod(period, token);\r\n    });\r\n\r\n    // Fetch all system transactions\r\n    fetchAllSystemTransactions(token);\r\n\r\n  }, [fetchUserTransactionsByPeriod, fetchAllSystemTransactions, baseUrl]); // Add fetchAllSystemTransactions and baseUrl\r\n\r\n  const renderContent = () => {\r\n    if (globalError) {\r\n      return <p className=\"error-message global-error-message\">{globalError}</p>;\r\n    }\r\n    \r\n    const currentPeriodTitle = activeTab.charAt(0).toUpperCase() + activeTab.slice(1);\r\n    const showUserNameColumn = activeTab === 'all'; // Only show User Name for \"All Transactions\" tab\r\n\r\n    return (\r\n      <TransactionTable\r\n        transactions={transactionData[activeTab]}\r\n        periodTitle={activeTab === 'all' ? \"All System Transactions\" : `${currentPeriodTitle} (User ID: ${USER_ID_FOR_ADMIN_VIEW})`}\r\n        isLoading={loadingStates[activeTab]}\r\n        showUserName={showUserNameColumn}\r\n      />\r\n    );\r\n  };\r\n\r\n  const TABS_CONFIG = [\r\n    { key: 'all', label: 'All Transactions' }, // New tab\r\n    { key: 'daily', label: 'Daily' },\r\n    { key: 'weekly', label: 'Weekly' },\r\n    { key: 'monthly', label: 'Monthly' },\r\n    { key: 'yearly', label: 'Yearly' },\r\n  ];\r\n  // If you want \"All Transactions\" to be the default, change useState for activeTab:\r\n  // const [activeTab, setActiveTab] = useState('all'); \r\n\r\n\r\n  return (\r\n    <div className=\"dashboard-transaction-page\">\r\n      <SidebarAdmin />\r\n      <div className=\"main-content-area\">\r\n        <header className=\"page-header\">\r\n          <h1>Transaction History</h1>\r\n        </header>\r\n\r\n        <section className=\"transactions-section\">\r\n          <div className=\"tabs-navigation\">\r\n            {TABS_CONFIG.map(tab => (\r\n              <button\r\n                key={tab.key}\r\n                onClick={() => setActiveTab(tab.key)}\r\n                className={`tab-button ${activeTab === tab.key ? 'active' : ''}`}\r\n                disabled={loadingStates[tab.key] && activeTab !== tab.key}\r\n              >\r\n                {tab.label}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"tab-content-area\">\r\n            {renderContent()}\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminTransactionPage;","// SidebarAdmin.jsx\r\nimport React from 'react';\r\nimport { NavLink, useNavigate } from 'react-router-dom';\r\nimport logo3 from \"../../assets/image/logo3.png\";\r\nimport './Style/AdminSidebar.scss' // Styles for this specific sidebar\r\n\r\nconst SidebarAdmin = ({ onLogout, isOpen, onClose }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleSignOut = () => {\r\n    if (typeof onLogout === 'function') {\r\n      onLogout();\r\n    } else {\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('userRole');\r\n      localStorage.removeItem('userData');\r\n      navigate('/login');\r\n    }\r\n  };\r\n\r\n  const handleNavClick = () => {\r\n    // Close sidebar on mobile when a nav item is clicked\r\n    if (onClose && window.innerWidth <= 768) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleOverlayClick = (e) => {\r\n    // Close sidebar when clicking on overlay\r\n    if (e.target.classList.contains('admin-sidebar__overlay')) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Overlay for mobile */}\r\n      {isOpen && (\r\n        <div \r\n          className=\"admin-sidebar__overlay\" \r\n          onClick={handleOverlayClick}\r\n          aria-hidden=\"true\"\r\n        />\r\n      )}\r\n      \r\n      <aside className={`admin-sidebar ${isOpen ? \"open\" : \"\"}`}>\r\n        {/* Mobile close button */}\r\n      \r\n\r\n        <div className=\"admin-sidebar__logo-section\">\r\n          <img src={logo3} alt=\"logo\" height=\"50px\" width=\"50px\" />\r\n          <h2 className=\"admin-sidebar__title\">Admin Dashboard</h2>\r\n        </div>\r\n        \r\n        <ul className=\"admin-sidebar__menu\">\r\n          <li className=\"admin-sidebar__menu-item\">\r\n            <NavLink \r\n              to=\"/adminDashboard\" \r\n              end \r\n              className={({ isActive }) => isActive ? \"active-link\" : \"\"}\r\n              onClick={handleNavClick}\r\n            >\r\n              Invest Dashboard\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"admin-sidebar__menu-item\">\r\n            <NavLink \r\n              to=\"/adminDashboard/userManagement\" \r\n              className={({ isActive }) => isActive ? \"active-link\" : \"\"}\r\n              onClick={handleNavClick}\r\n            >\r\n              User Management\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"admin-sidebar__menu-item\">\r\n            <NavLink \r\n              to=\"/adminDashboard/manageBlog\" \r\n              className={({ isActive }) => isActive ? \"active-link\" : \"\"}\r\n              onClick={handleNavClick}\r\n            >\r\n              Manage Blog\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"admin-sidebar__menu-item\">\r\n            <NavLink \r\n              to=\"/adminDashboard/transaction\" \r\n              className={({ isActive }) => isActive ? \"active-link\" : \"\"}\r\n              onClick={handleNavClick}\r\n            >\r\n              Transactions\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"admin-sidebar__menu-item\">\r\n            <NavLink \r\n              to=\"/adminDashboard/withdrawals\" \r\n              className={({ isActive }) => isActive ? \"active-link\" : \"\"}\r\n              onClick={handleNavClick}\r\n            >\r\n              Withdrawals\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"admin-sidebar__menu-item\">\r\n            <NavLink \r\n              to=\"/adminDashboard/adminPlans\" \r\n              className={({ isActive }) => isActive ? \"active-link\" : \"\"}\r\n              onClick={handleNavClick}\r\n            >\r\n              Plans\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n        \r\n        <div \r\n          className=\"admin-sidebar__signout\"\r\n          onClick={handleSignOut} \r\n          style={{ cursor: 'pointer' }}\r\n          tabIndex={0}\r\n          role=\"button\"\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter' || e.key === ' ') {\r\n              handleSignOut();\r\n            }\r\n          }}\r\n        >\r\n          Sign Out\r\n        </div>\r\n      </aside>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SidebarAdmin;"],"names":["baseUrl","process","AUTH_TOKEN_KEY","formatDate","dateString","Date","toLocaleDateString","year","month","day","hour","minute","e","console","error","TransactionTable","_ref","transactions","periodTitle","isLoading","showUserName","_jsxs","className","children","_jsx","Array","isArray","length","map","transaction","_transaction$User","_transaction$Plan","_transaction$amount","_transaction$status","id","User","name","Plan","amount","toFixed","status","toLowerCase","createdAt","userId","AdminTransactionPage","transactionData","setTransactionData","useState","daily","weekly","monthly","yearly","all","loadingStates","setLoadingStates","activeTab","setActiveTab","globalError","setGlobalError","fetchUserTransactionsByPeriod","useCallback","async","period","token","prev","apiUrl","response","fetch","headers","localStorage","removeItem","responseText","text","data","JSON","parse","Error","message","ok","err","fetchAllSystemTransactions","periodKey","useEffect","getItem","initialLoadingStates","initialTransactionData","Object","keys","forEach","p","SidebarAdmin","key","label","tab","onClick","disabled","renderContent","currentPeriodTitle","charAt","toUpperCase","slice","showUserNameColumn","onLogout","isOpen","onClose","navigate","useNavigate","handleSignOut","handleNavClick","window","innerWidth","_Fragment","target","classList","contains","src","logo3","alt","height","width","NavLink","to","end","_ref2","isActive","_ref3","_ref4","_ref5","_ref6","_ref7","style","cursor","tabIndex","role","onKeyDown"],"sourceRoot":""}