{"version":3,"file":"static/js/395.9009de53.chunk.js","mappings":"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","sources":["Component/Footer.jsx","Component/Header.jsx","Component/Seo.jsx","Pages/SwpCalculator.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaInstagram, FaLinkedin, FaFacebook, FaTwitter, FaPhone, FaMapMarkerAlt, FaEnvelope} from \"react-icons/fa\"; \nimport \"../assets/styles/Footer.scss\";\nimport footerLogo from \"../assets/image/logo4.png\";\n\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"footer-content\">\n                <div className=\"footer-section \">\n                    <div className=\"footer-heading\">\n                        <img className=\"footerLogo\" src={footerLogo} alt=\"logo\" title=\"logo\" loading=\"eager\" />\n                        <h2 className=\"logo-text\">TheCapitalTree</h2>\n                    </div>\n                    <p className=\"footer-para\">\n                        TheCapitalTree provides the <br />  best investment options to <br /> help you grow your wealth.\n                    </p>\n                    <div className=\"contact\">\n                    <a href=\"tel:+918263066511\" target=\"_blank\" rel=\"noopener noreferrer\"><span><FaPhone /> 8263066511</span> </a>\n                    <a href=\"https://maps.app.goo.gl/xdqz1Wpt6SNNejF97\"><span><FaMapMarkerAlt />  The Capital Tree, Pune, India</span> </a>\n                    <a href= \"mailto:contact@thecapitaltree.in\" target=\"_blank\" rel=\"noopener noreferrer\">   <span><FaEnvelope /> contact@thecapitaltree.in</span> </a>\n                    </div>\n                    \n                </div>\n\n                \n\n                <div className=\"footer-section links\">\n                    <h2>TheCapitalTree</h2>\n                    <ul>\n                        <li><Link to=\"/\">Home</Link></li>\n                        <li><Link to=\"/about\">About Us</Link></li>\n                        <li><Link to=\"/support\">Support</Link></li>\n                        <li><Link to=\"/blog\">Blog</Link></li>\n                        \n                        \n                    </ul>\n                </div>\n\n                <div className=\"footer-section links\">\n                    <h2>Resources</h2>\n                    <ul>\n                        <li><Link to=\"/\">Terms & Conditions</Link></li>\n                        <li><Link to=\"/services\">Privacy Policy</Link></li>\n                        <li><Link to=\"/Support\">FAQs</Link></li>\n                    </ul>\n                </div>\n               \n                <div className=\"footer-section links\">\n                    <ul className=\"social-icons\">\n                    <a href=\"https://www.linkedin.com/company/thecapitaltree\" target=\"_blank\" rel=\"noopener noreferrer\"><FaLinkedin className=\"social-icon\" /></a>\n                        <a href=\"https://www.facebook.com/thecapitaltree\" target=\"_blank\" rel=\"noopener noreferrer\"><FaFacebook className=\"social-icon\" /></a>\n                        <a href=\"https://www.instagram.com/thecapitaltree\" target=\"_blank\" rel=\"noopener noreferrer\"><FaInstagram className=\"social-icon\" /></a>\n                        <a href=\"https://www.twitter.com/thecapitaltree\" target=\"_blank\" rel=\"noopener noreferrer\"><FaTwitter className=\"social-icon\" /></a>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"footer-bottom\">\n            <p className=\"copyright\">&copy; TheCapitalTree. Backed by Medro. All rights reserved.</p>\n            \n            \n</div>\n\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../assets/styles/Header.scss\";\r\nimport logo from \"../assets/image/logo.png\";\r\n\r\nconst Header = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  // Close menu when a link is clicked\r\n  const closeMenu = () => {\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"logo\">\r\n        <Link to=\"/\" onClick={closeMenu}> {/* Close menu on logo click too */}\r\n          <img src={logo} alt=\"The Capital Tree Logo\" title=\"logo\" height=\"40px\" width=\"120px\" loading=\"eager\" />\r\n        </Link>\r\n        \r\n      </div>\r\n\r\n      {/* Hamburger Menu Button */}\r\n      <button\r\n        className={`hamburger ${menuOpen ? \"active\" : \"\"}`}\r\n        onClick={toggleMenu}\r\n        aria-label=\"Toggle navigation\"\r\n        aria-expanded={menuOpen}\r\n        aria-controls=\"nav-menu\" // Points to the ID of the navigation list\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </button>\r\n\r\n      {/* Navigation Links */}\r\n      <nav>\r\n        <ul id=\"nav-menu\" className={`nav-links ${menuOpen ? \"open\" : \"\"}`}>\r\n          <li><Link className=\"nav-link\" to=\"/\" onClick={closeMenu}>Home</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/about\" onClick={closeMenu}>About Us</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/invest\" onClick={closeMenu}>Invest</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/swp-calculator\" onClick={closeMenu}>SWP Calculator</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/learn\" onClick={closeMenu}>Learn</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/support\" onClick={closeMenu}>Support</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/login\" onClick={closeMenu}>Login</Link></li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst Seo = ({ title, description, page, keywords }) => {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n        <meta \r\n          name=\"description\" \r\n          content={description} \r\n        />\r\n        <link \r\n          rel=\"canonical\" \r\n          \r\n        />\r\n        <meta \r\n          name=\"keywords\" \r\n          content={keywords}\r\n        />\r\n        \r\n\r\n      </Helmet>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Seo;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../assets/styles/SwpCalculator.scss\";\r\nimport Header from \"../Component/Header\";\r\nimport Footer from \"../Component/Footer\";\r\nimport Seo from \"../Component/Seo\";\r\nimport Animation from \"../assets/image/invest.jpg\"; // Assuming this path is correct\r\n\r\nfunction SwpCalculator() {\r\n  const [investmentPeriod, setInvestmentPeriod] = useState(1);\r\n  const [totalInvestment, setTotalInvestment] = useState(100000); // Example initial value\r\n  const [monthlyWithdrawal, setMonthlyWithdrawal] = useState(1000); // Example initial value\r\n  const [rateOfReturn, setRateOfReturn] = useState(8); // Example initial value\r\n  const [finalValue, setFinalValue] = useState(null);\r\n  const [totalInterest, setTotalInterest] = useState(null);\r\n  const [totalWithdrawn, setTotalWithdrawn] = useState(null);\r\n  const [tableData, setTableData] = useState([]);\r\n\r\n  const handleInputChange = (setter) => (e) => {\r\n    // Ensure we handle empty input gracefully, setting it to 0\r\n    const value = e.target.value === \"\" ? 0 : parseFloat(e.target.value);\r\n    // Use isNaN check for safety\r\n    setter(isNaN(value) ? 0 : value);\r\n  };\r\n\r\n  // Separate handler for text input to allow typing numbers directly\r\n  const handleTextInputChange = (setter) => (e) => {\r\n    const value = e.target.value.replace(/[^0-9.]/g, \"\"); // Allow only numbers and dot\r\n    // Ensure we handle empty input gracefully, setting it to 0 or keeping it empty for typing\r\n    const numericValue = value === \"\" ? \"\" : parseFloat(value);\r\n    // Update state only if it's a valid number or empty string\r\n    if (value === \"\" || !isNaN(numericValue)) {\r\n      setter(value === \"\" ? \"\" : numericValue); // Store empty string or number\r\n    }\r\n  };\r\n\r\n  // Helper function to format numbers for display in text inputs\r\n  const formatValueForInput = (value) => {\r\n    // Show empty string if value is 0 or '', otherwise show the number\r\n    return value === 0 || value === \"\" ? \"\" : value.toString();\r\n  };\r\n\r\n  const calculateSWP = () => {\r\n    // Use 0 if state holds empty string before calculation\r\n    const currentTotalInvestment = totalInvestment === \"\" ? 0 : totalInvestment;\r\n    const currentMonthlyWithdrawal =\r\n      monthlyWithdrawal === \"\" ? 0 : monthlyWithdrawal;\r\n    const currentRateOfReturn = rateOfReturn === \"\" ? 0 : rateOfReturn;\r\n\r\n    let remainingAmount = currentTotalInvestment;\r\n    let totalWithdrawals = investmentPeriod * 12;\r\n    let interestEarned = 0;\r\n    let monthlyData = []; // Array to store monthly data for the table\r\n\r\n    // Basic validation\r\n    if (\r\n      currentTotalInvestment <= 0 ||\r\n      investmentPeriod <= 0 ||\r\n      currentRateOfReturn < 0 ||\r\n      currentMonthlyWithdrawal < 0\r\n    ) {\r\n      // Maybe set an error state here or just reset results\r\n      setFinalValue(null);\r\n      setTotalInterest(null);\r\n      setTotalWithdrawn(null);\r\n      setTableData([]); // Clear table data\r\n      console.warn(\"Invalid input for calculation.\");\r\n      return; // Stop calculation if inputs are invalid\r\n    }\r\n\r\n    for (let i = 0; i < totalWithdrawals; i++) {\r\n      // Ensure remainingAmount doesn't go below zero before calculation\r\n      if (remainingAmount <= 0) {\r\n        remainingAmount = 0;\r\n        break; // Stop if balance is zero or negative\r\n      }\r\n\r\n      let interest = (remainingAmount * (currentRateOfReturn / 100)) / 12;\r\n      interestEarned += interest;\r\n      let beforeWithdrawal = remainingAmount + interest; // Balance before withdrawal\r\n      remainingAmount = beforeWithdrawal - currentMonthlyWithdrawal;\r\n\r\n      // Ensure remaining amount doesn't drop below zero *after* withdrawal\r\n      if (remainingAmount < 0) {\r\n        // Adjust last withdrawal if needed? Or just set final to 0?\r\n        // For simplicity, let's assume the full withdrawal happens if possible,\r\n        // and the final value reflects the potentially negative balance before setting to 0.\r\n        // Let's recalculate the last effective withdrawal if balance goes negative.\r\n        // Or more simply: cap remainingAmount at 0.\r\n        remainingAmount = 0;\r\n        // We need to know how many withdrawals actually happened.\r\n        totalWithdrawals = i + 1; // Record the actual number of withdrawals made\r\n      }\r\n\r\n      monthlyData.push({\r\n        month: i + 1,\r\n        beginningBalance: beforeWithdrawal.toFixed(2),\r\n        withdrawal: currentMonthlyWithdrawal.toFixed(2),\r\n        interest: interest.toFixed(2),\r\n        endingBalance: remainingAmount.toFixed(2),\r\n      });\r\n    }\r\n\r\n    setFinalValue(remainingAmount.toFixed(2));\r\n    setTotalInterest(interestEarned.toFixed(2));\r\n    // Calculate total withdrawn based on actual withdrawals made before balance hit zero\r\n    setTotalWithdrawn((currentMonthlyWithdrawal * totalWithdrawals).toFixed(2));\r\n    setTableData(monthlyData); // Set the table data state\r\n  };\r\n\r\n  return (\r\n    <div className=\"swpcalculator-container\">\r\n      <Seo\r\n        title=\"SWP Calculator\"\r\n        description=\"This Systematic Withdrawal Plan calculator computes your matured sum as per your monthly withdrawals.\"\r\n        canonical=\"Swp-calculator\"\r\n        keywords={[\r\n          \"trading\",\r\n          \"thecapitaltree\",\r\n          \"risk management\",\r\n          \"strategies\",\r\n          \"swp\",\r\n          \"systematic withdrawal plan\",\r\n          \"investment calculator\",\r\n        ]}\r\n      />\r\n      <Header />\r\n      <main className=\"main-content-swp\">\r\n        <section className=\"swpcalculator-section\">\r\n          <h1 className=\"main-heading-swp\">SWP Calculator</h1>\r\n          {/* Flex Container for Columns */}\r\n          <div className=\"calculator-layout-container\">\r\n            {/* Column 1: Calculator Form & Results */}\r\n            <div className=\"calculator-form-column\">\r\n              {/* Using a wrapper div for inputs for better structure */}\r\n              <div className=\"calculator-inputs\">\r\n                {[\r\n                  {\r\n                    label: \"Total Investment (₹)\",\r\n                    value: totalInvestment,\r\n                    setter: setTotalInvestment,\r\n                    max: 10000000,\r\n                  }, // Increased max\r\n                  {\r\n                    label: \"Monthly Withdrawal (₹)\",\r\n                    value: monthlyWithdrawal,\r\n                    setter: setMonthlyWithdrawal,\r\n                    max: 100000,\r\n                  },\r\n                  {\r\n                    label: \"Expected Rate of Return (%)\",\r\n                    value: rateOfReturn,\r\n                    setter: setRateOfReturn,\r\n                    max: 30,\r\n                  }, // Adjusted max\r\n                ].map(({ label, value, setter, max }, index) => (\r\n                  <div key={index} className=\"input-group\">\r\n                    {/* Changed class */}\r\n                    <label htmlFor={`input-${index}`}>{label}</label>\r\n                    <div className=\"input-controls\">\r\n                      {/* Wrapper for text and range */}\r\n                      <input\r\n                        id={`input-${index}`}\r\n                        type=\"text\" // Use text to allow empty string\r\n                        value={formatValueForInput(value)} // Format for display\r\n                        onChange={handleTextInputChange(setter)} // Use text handler\r\n                        placeholder=\"0\"\r\n                        className=\"value-input\" // Specific class for text input\r\n                      />\r\n                      <input\r\n                        type=\"range\"\r\n                        min=\"0\"\r\n                        max={max}\r\n                        // step={max / 100} // Step might be too large, adjust as needed\r\n                        step={max > 10000 ? 1000 : max > 1000 ? 100 : 1} // Dynamic step\r\n                        value={value === \"\" ? 0 : value} // Range needs a number\r\n                        onChange={handleInputChange(setter)} // Use original handler\r\n                        className=\"range-slider\" // Specific class for range\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n\r\n                <div className=\"input-group\">\r\n                  {/* Changed class */}\r\n                  <label htmlFor=\"investmentPeriodInput\">\r\n                    Investment Period (Years)\r\n                  </label>\r\n                  <div className=\"investment-controls\">\r\n                    <button\r\n                      className=\"control-btn\"\r\n                      onClick={() =>\r\n                        setInvestmentPeriod((prev) => Math.max(prev - 1, 1))\r\n                      }\r\n                    >\r\n                      -\r\n                    </button>\r\n                    <input\r\n                      id=\"investmentPeriodInput\"\r\n                      type=\"text\"\r\n                      value={investmentPeriod}\r\n                      readOnly\r\n                      className=\"textinput period-input\" // Specific class\r\n                    />\r\n                    <button\r\n                      className=\"control-btn\"\r\n                      onClick={() => setInvestmentPeriod((prev) => prev + 1)}\r\n                    >\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* End of calculator inputs */}\r\n              <div className=\"calculate-button-container\">\r\n                <button className=\"calculate\" onClick={calculateSWP}>\r\n                  Calculate\r\n                </button>\r\n              </div>\r\n\r\n              {finalValue !== null && (\r\n                <div className=\"results-container\">\r\n                  {[\r\n                    { label: \"Final Value\", value: finalValue },\r\n                    { label: \"Total Interest Earned\", value: totalInterest },\r\n                    { label: \"Total Withdrawn\", value: totalWithdrawn }, // Corrected label\r\n                  ].map(({ label, value }, index) => (\r\n                    <div key={index} className=\"result-item\">\r\n                      <span className=\"result-label\">{label}:</span>\r\n                      <span className=\"result-value\">₹ {value}</span>{\" \"}\r\n                      {/* Added space */}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>{\" \"}\r\n            {/* End Column 1 */}\r\n          </div>{\" \"}\r\n          {/* End Flex Container */}\r\n        </section>\r\n        {/* Column 2: Video & Invest Button */}\r\n        <div className=\"calculator-media-column\">\r\n          <img src={Animation} alt=\"\" width=\"550px\" />\r\n          \r\n          <Link to=\"/login\" className=\"invest-now-button\">Invest Now</Link>\r\n        </div>{\" \"}\r\n        {/* End Column 2 */}\r\n      </main>\r\n      {tableData.length > 0 && (\r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Month</th>\r\n                <th>Balance at Begin (₹)</th>\r\n                <th>Withdrawal (₹)</th>\r\n                <th>Interest Earned (₹)</th>\r\n                <th>Balance at End (₹)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableData.map((row, index) => (\r\n                <tr key={index}>\r\n                  <td>{row.month}</td>\r\n                  <td>₹{row.beginningBalance}</td>\r\n                  <td>₹{row.withdrawal}</td>\r\n                  <td>₹{row.interest}</td>\r\n                  <td>₹{row.endingBalance}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SwpCalculator;\r\n"],"names":["Footer","_jsxs","className","children","_jsx","src","footerLogo","alt","title","loading","href","target","rel","FaPhone","FaMapMarkerAlt","FaEnvelope","Link","to","FaLinkedin","FaFacebook","FaInstagram","FaTwitter","Header","menuOpen","setMenuOpen","useState","closeMenu","onClick","logo","height","width","toggleMenu","id","_ref","description","page","keywords","Helmet","name","content","investmentPeriod","setInvestmentPeriod","totalInvestment","setTotalInvestment","monthlyWithdrawal","setMonthlyWithdrawal","rateOfReturn","setRateOfReturn","finalValue","setFinalValue","totalInterest","setTotalInterest","totalWithdrawn","setTotalWithdrawn","tableData","setTableData","handleInputChange","setter","e","value","parseFloat","isNaN","handleTextInputChange","replace","numericValue","formatValueForInput","toString","Seo","canonical","label","max","map","index","htmlFor","type","onChange","placeholder","min","step","prev","Math","readOnly","calculateSWP","currentTotalInvestment","currentMonthlyWithdrawal","currentRateOfReturn","remainingAmount","totalWithdrawals","interestEarned","monthlyData","console","warn","i","interest","beforeWithdrawal","push","month","beginningBalance","toFixed","withdrawal","endingBalance","_ref2","Animation","length","row"],"sourceRoot":""}