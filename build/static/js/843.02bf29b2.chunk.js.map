{"version":3,"file":"static/js/843.02bf29b2.chunk.js","mappings":"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","sources":["Component/Footer.jsx","Component/Header.jsx","Component/Seo.jsx","Pages/Login.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaInstagram, FaLinkedin, FaFacebook, FaTwitter, FaPhone, FaMapMarkerAlt, FaEnvelope} from \"react-icons/fa\"; \nimport \"../assets/styles/Footer.scss\";\nimport footerLogo from \"../assets/image/logo4.png\";\n\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <div className=\"footer-content\">\n                <div className=\"footer-section \">\n                    <div className=\"footer-heading\">\n                        <img className=\"footerLogo\" src={footerLogo} alt=\"logo\" title=\"logo\" loading=\"eager\" />\n                        <h2 className=\"logo-text\">TheCapitalTree</h2>\n                    </div>\n                    <p className=\"footer-para\">\n                        TheCapitalTree provides the <br />  best investment options to <br /> help you grow your wealth.\n                    </p>\n                    <div className=\"contact\">\n                    <a href=\"tel:+918263066511\" target=\"_blank\" rel=\"noopener noreferrer\"><span><FaPhone /> 8263066511</span> </a>\n                    <a href=\"https://maps.app.goo.gl/xdqz1Wpt6SNNejF97\"><span><FaMapMarkerAlt />  The Capital Tree, Pune, India</span> </a>\n                    <a href= \"mailto:contact@thecapitaltree.in\" target=\"_blank\" rel=\"noopener noreferrer\">   <span><FaEnvelope /> contact@thecapitaltree.in</span> </a>\n                    </div>\n                    \n                </div>\n\n                \n\n                <div className=\"footer-section links\">\n                    <h2>TheCapitalTree</h2>\n                    <ul>\n                        <li><Link to=\"/\">Home</Link></li>\n                        <li><Link to=\"/about\">About Us</Link></li>\n                        <li><Link to=\"/support\">Support</Link></li>\n                        <li><Link to=\"/blog\">Blog</Link></li>\n                        \n                        \n                    </ul>\n                </div>\n\n                <div className=\"footer-section links\">\n                    <h2>Resources</h2>\n                    <ul>\n                        <li><Link to=\"/\">Terms & Conditions</Link></li>\n                        <li><Link to=\"/services\">Privacy Policy</Link></li>\n                        <li><Link to=\"/Support\">FAQs</Link></li>\n                    </ul>\n                </div>\n               \n                <div className=\"footer-section links\">\n                    <ul className=\"social-icons\">\n                    <a href=\"https://www.linkedin.com/company/thecapitaltree\" target=\"_blank\" rel=\"noopener noreferrer\"><FaLinkedin className=\"social-icon\" /></a>\n                        <a href=\"https://www.facebook.com/thecapitaltree\" target=\"_blank\" rel=\"noopener noreferrer\"><FaFacebook className=\"social-icon\" /></a>\n                        <a href=\"https://www.instagram.com/thecapitaltree\" target=\"_blank\" rel=\"noopener noreferrer\"><FaInstagram className=\"social-icon\" /></a>\n                        <a href=\"https://www.twitter.com/thecapitaltree\" target=\"_blank\" rel=\"noopener noreferrer\"><FaTwitter className=\"social-icon\" /></a>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"footer-bottom\">\n            <p className=\"copyright\">&copy; TheCapitalTree. Backed by Medro. All rights reserved.</p>\n            \n            \n</div>\n\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../assets/styles/Header.scss\";\r\nimport logo from \"../assets/image/logo.png\";\r\n\r\nconst Header = () => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n\r\n  // Close menu when a link is clicked\r\n  const closeMenu = () => {\r\n    setMenuOpen(false);\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"logo\">\r\n        <Link to=\"/\" onClick={closeMenu}> {/* Close menu on logo click too */}\r\n          <img src={logo} alt=\"The Capital Tree Logo\" title=\"logo\" height=\"40px\" width=\"120px\" loading=\"eager\" />\r\n        </Link>\r\n        \r\n      </div>\r\n\r\n      {/* Hamburger Menu Button */}\r\n      <button\r\n        className={`hamburger ${menuOpen ? \"active\" : \"\"}`}\r\n        onClick={toggleMenu}\r\n        aria-label=\"Toggle navigation\"\r\n        aria-expanded={menuOpen}\r\n        aria-controls=\"nav-menu\" // Points to the ID of the navigation list\r\n      >\r\n        <span></span>\r\n        <span></span>\r\n        <span></span>\r\n      </button>\r\n\r\n      {/* Navigation Links */}\r\n      <nav>\r\n        <ul id=\"nav-menu\" className={`nav-links ${menuOpen ? \"open\" : \"\"}`}>\r\n          <li><Link className=\"nav-link\" to=\"/\" onClick={closeMenu}>Home</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/about\" onClick={closeMenu}>About Us</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/invest\" onClick={closeMenu}>Invest</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/swp-calculator\" onClick={closeMenu}>SWP Calculator</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/learn\" onClick={closeMenu}>Learn</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/support\" onClick={closeMenu}>Support</Link></li>\r\n          <li><Link className=\"nav-link\" to=\"/login\" onClick={closeMenu}>Login</Link></li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst Seo = ({ title, description, page, keywords }) => {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n        <meta \r\n          name=\"description\" \r\n          content={description} \r\n        />\r\n        <link \r\n          rel=\"canonical\" \r\n          \r\n        />\r\n        <meta \r\n          name=\"keywords\" \r\n          content={keywords}\r\n        />\r\n        \r\n\r\n      </Helmet>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Seo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Header from \"../Component/Header\";\r\nimport Footer from \"../Component/Footer\";\r\nimport Seo from \"../Component/Seo\";\r\nimport logo1 from \"../assets/image/logo1.png\";\r\nimport logo6 from \"../assets/image/logo6.png\";\r\nimport loginAnimation from \"../assets/image/Login_no_bg_v2.gif\";\r\nimport \"../assets/styles/Login.scss\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst ADMIN_EMAILS = [\r\n  \"gaurav@example.com\",\r\n  \"gaurav@example.com\",\r\n];\r\n\r\n// Input field component\r\nconst InputField = ({ label, type, id, registerProps, error, showToggle, showPassword, togglePassword }) => (\r\n  <div className=\"form-group\">\r\n    <label htmlFor={id}>{label}</label>\r\n    <div style={{ position: 'relative' }}>\r\n      <input\r\n        type={showToggle && !showPassword ? \"password\" : type}\r\n        id={id}\r\n        {...registerProps}\r\n        placeholder={`Enter your ${label.toLowerCase()}`}\r\n      />\r\n      {showToggle && (\r\n        <button\r\n          type=\"button\"\r\n          onClick={togglePassword}\r\n          style={{\r\n            position: 'absolute',\r\n            right: '10px',\r\n            top: '50%',\r\n            transform: 'translateY(-50%)',\r\n            background: 'none',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n            fontSize: '16px',\r\n            color: '#666'\r\n          }}\r\n        >\r\n          \r\n        </button>\r\n      )}\r\n    </div>\r\n    {error && <p className=\"error\">{error.message}</p>}\r\n  </div>\r\n);\r\n\r\nconst LoginRegister = ({ onLoginSuccess }) => {\r\n  const [isRegister, setIsRegister] = useState(false);\r\n  const [showOtpField, setShowOtpField] = useState(false);\r\n  const [showForgotPassword, setShowForgotPassword] = useState(false);\r\n  const [showResetPassword, setShowResetPassword] = useState(false);\r\n  const [enteredOtp, setEnteredOtp] = useState(Array(6).fill(\"\"));\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [isOtpVerified, setIsOtpVerified] = useState(false);\r\n  const [registrationData, setRegistrationData] = useState({});\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showLoginPassword, setShowLoginPassword] = useState(false);\r\n  const [showNewPassword, setShowNewPassword] = useState(false);\r\n  const [showConfirmNewPassword, setShowConfirmNewPassword] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [otpCooldown, setOtpCooldown] = useState(0);\r\n  const [otpError, setOtpError] = useState(\"\");\r\n  const [otpAttempts, setOtpAttempts] = useState(0);\r\n  const [resetToken, setResetToken] = useState(\"\");\r\n  \r\n  const navigate = useNavigate();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    watch,\r\n    reset,\r\n  } = useForm();\r\n\r\n  const getUserRole = (email, backendRole = null) => {\r\n    if (backendRole === \"admin\") return \"admin\";\r\n    if (ADMIN_EMAILS.includes(email.toLowerCase())) return \"admin\";\r\n    return \"user\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    const role = localStorage.getItem(\"userRole\");\r\n\r\n    if (token && role) {\r\n      navigate(role === \"admin\" ? \"/adminDashboard\" : \"/dashboard\");\r\n    }\r\n\r\n    // Check if there's a reset token in URL params\r\n    const urlResetToken = searchParams.get('token');\r\n    if (urlResetToken) {\r\n      setResetToken(urlResetToken);\r\n      setShowResetPassword(true);\r\n      setShowForgotPassword(false);\r\n      setIsRegister(false);\r\n    }\r\n  }, [navigate, searchParams]);\r\n\r\n  const onLogin = async (data) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post(`${baseUrl}/api/users/login`, {\r\n        email: data.email,\r\n        password: data.password,\r\n      });\r\n\r\n      const token = res.data.token;\r\n      if (token) {\r\n        const payload = parseJwt(token);\r\n        const userRole = getUserRole(data.email, payload.role);\r\n        const user = {\r\n          id: payload.userId,\r\n          email: data.email,\r\n          role: userRole,\r\n        };\r\n\r\n        localStorage.setItem(\"authToken\", token);\r\n        localStorage.setItem(\"userRole\", userRole);\r\n        localStorage.setItem(\"userData\", JSON.stringify(user));\r\n\r\n        toast.success(\"Login Successful!\");\r\n\r\n        if (typeof onLoginSuccess === \"function\") {\r\n          onLoginSuccess(token, userRole, user);\r\n        }\r\n\r\n        navigate(userRole === \"admin\" ? \"/adminDashboard\" : \"/dashboard\");\r\n      } else {\r\n        toast.error(\"Login failed: No token received\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      toast.error(error.response?.data?.message || \"Login failed\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleLogin = (data) => {\r\n    onLogin(data);\r\n  };\r\n\r\n  // Forgot Password Handler\r\n  const handleForgotPassword = async (data) => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.post(`${baseUrl}/api/users/forgot-password`, {\r\n        email: data.email,\r\n      });\r\n      toast.success(\"Password reset link sent to your email!\");\r\n      setShowForgotPassword(false);\r\n      reset();\r\n    } catch (error) {\r\n      console.error(\"Forgot password error:\", error);\r\n      toast.error(error.response?.data?.message || \"Failed to send reset link\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Reset Password Handler\r\n  const handleResetPassword = async (data) => {\r\n    setLoading(true);\r\n    try {\r\n      await axios.post(`${baseUrl}/api/users/reset-password`, {\r\n        token: resetToken,\r\n        newPassword: data.newPassword,\r\n      });\r\n      toast.success(\"Password reset successfully! You can now login with your new password.\");\r\n      setShowResetPassword(false);\r\n      setResetToken(\"\");\r\n      reset();\r\n      // Navigate to login page and remove token from URL\r\n      navigate('/login', { replace: true });\r\n    } catch (error) {\r\n      console.error(\"Reset password error:\", error);\r\n      toast.error(error.response?.data?.message || \"Failed to reset password\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsRegister(!isRegister);\r\n    setShowOtpField(false);\r\n    setIsOtpVerified(false);\r\n    setEnteredOtp(Array(6).fill(\"\"));\r\n    setOtpError(\"\");\r\n    setOtpAttempts(0);\r\n    setShowForgotPassword(false);\r\n    setShowResetPassword(false);\r\n    reset();\r\n  };\r\n\r\n  const showForgotPasswordForm = () => {\r\n    setShowForgotPassword(true);\r\n    setIsRegister(false);\r\n    setShowOtpField(false);\r\n    setShowResetPassword(false);\r\n    reset();\r\n  };\r\n\r\n  const backToLogin = () => {\r\n    setShowForgotPassword(false);\r\n    setShowResetPassword(false);\r\n    setIsRegister(false);\r\n    setShowOtpField(false);\r\n    setResetToken(\"\");\r\n    reset();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showOtpField) {\r\n      setTimeout(() => {\r\n        document.getElementById(\"otp-input-0\")?.focus();\r\n      }, 100);\r\n    }\r\n  }, [showOtpField]);\r\n\r\n  useEffect(() => {\r\n    if (otpCooldown > 0) {\r\n      const timer = setTimeout(() => setOtpCooldown(otpCooldown - 1), 1000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [otpCooldown]);\r\n\r\n  const handleRegistration = async (data) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.post(`${baseUrl}/api/users/register`, {\r\n        name: data.name,\r\n        email: data.email,\r\n        phone: data.phone,\r\n        password: data.password,\r\n        confirmPassword: data.confirmPassword\r\n      });\r\n      \r\n      toast.success(\"Registration successful! OTP sent to your phone.\");\r\n      setPhoneNumber(data.phone);\r\n      setRegistrationData(data);\r\n      setShowOtpField(true);\r\n      setOtpCooldown(60);\r\n      setOtpAttempts(0);\r\n      setOtpError(\"\");\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || \"Registration failed\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const resendOtp = async () => {\r\n    if (otpCooldown > 0) return;\r\n    setLoading(true);\r\n    try {\r\n      await axios.post(`${baseUrl}/api/users/resend-otp`, { phone: phoneNumber });\r\n      toast.success(\"OTP Resent!\");\r\n      setOtpCooldown(60);\r\n      setEnteredOtp(Array(6).fill(\"\"));\r\n      setOtpError(\"\");\r\n      document.getElementById(\"otp-input-0\")?.focus();\r\n    } catch (error) {\r\n      toast.error(error.response?.data?.message || \"Error resending OTP. Please try registration again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleOtpChange = (value, index) => {\r\n    const sanitizedValue = value.replace(/[^0-9]/g, \"\");\r\n    const newOtp = [...enteredOtp];\r\n    newOtp[index] = sanitizedValue;\r\n    setEnteredOtp(newOtp);\r\n    setOtpError(\"\");\r\n\r\n    // Auto-focus next input\r\n    if (sanitizedValue && index < 5) {\r\n      setTimeout(() => {\r\n        document.getElementById(`otp-input-${index + 1}`)?.focus();\r\n      }, 50);\r\n    }\r\n\r\n    // Auto-submit when all digits are entered\r\n    if (sanitizedValue && index === 5 && newOtp.every(digit => digit !== \"\")) {\r\n      setTimeout(() => {\r\n        verifyOtp(null, newOtp.join(\"\"));\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  const handleOtpKeyDown = (e, index) => {\r\n    if (e.key === 'Backspace' && !enteredOtp[index] && index > 0) {\r\n      setTimeout(() => {\r\n        document.getElementById(`otp-input-${index - 1}`)?.focus();\r\n      }, 50);\r\n    }\r\n    if (e.key === 'ArrowLeft' && index > 0) {\r\n      document.getElementById(`otp-input-${index - 1}`)?.focus();\r\n    }\r\n    if (e.key === 'ArrowRight' && index < 5) {\r\n      document.getElementById(`otp-input-${index + 1}`)?.focus();\r\n    }\r\n  };\r\n\r\n  const handleOtpPaste = (e) => {\r\n    e.preventDefault();\r\n    const paste = e.clipboardData.getData('text').replace(/[^0-9]/g, '').slice(0, 6);\r\n    const newOtp = Array(6).fill(\"\");\r\n    for (let i = 0; i < paste.length; i++) {\r\n      newOtp[i] = paste[i];\r\n    }\r\n    setEnteredOtp(newOtp);\r\n    setOtpError(\"\");\r\n    \r\n    // Focus the next empty input or last input\r\n    const nextEmptyIndex = newOtp.findIndex(digit => digit === \"\");\r\n    const focusIndex = nextEmptyIndex === -1 ? 5 : nextEmptyIndex;\r\n    setTimeout(() => {\r\n      document.getElementById(`otp-input-${focusIndex}`)?.focus();\r\n    }, 50);\r\n\r\n    // Auto-submit if complete\r\n    if (paste.length === 6) {\r\n      setTimeout(() => {\r\n        verifyOtp(null, paste);\r\n      }, 100);\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async (e, otpValue = null) => {\r\n    if (e) e.preventDefault();\r\n    \r\n    const otp = otpValue || enteredOtp.join(\"\");\r\n    \r\n    if (otp.length !== 6) {\r\n      setOtpError(\"Please enter a complete 6-digit OTP\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setOtpError(\"\");\r\n    \r\n    try {\r\n      await axios.post(`${baseUrl}/api/users/verify-phone`, {\r\n        phone: phoneNumber,\r\n        otp: otp,\r\n      });\r\n      \r\n      toast.success(\"Phone number verified successfully! You can now login.\");\r\n      \r\n      // Reset form and go back to login\r\n      setIsRegister(false);\r\n      setShowOtpField(false);\r\n      setIsOtpVerified(false);\r\n      setEnteredOtp(Array(6).fill(\"\"));\r\n      setOtpError(\"\");\r\n      setOtpAttempts(0);\r\n      reset();\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || \"OTP Verification Failed\";\r\n      setOtpError(errorMessage);\r\n      setOtpAttempts(prev => prev + 1);\r\n      \r\n      // Clear OTP inputs on error\r\n      setEnteredOtp(Array(6).fill(\"\"));\r\n      setTimeout(() => {\r\n        document.getElementById(\"otp-input-0\")?.focus();\r\n      }, 100);\r\n      \r\n      toast.error(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const parseJwt = (token) => {\r\n    try {\r\n      const base64Url = token.split('.')[1];\r\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n      return JSON.parse(atob(base64));\r\n    } catch (error) {\r\n      console.error(\"JWT parse error\", error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const formatPhoneNumber = (phone) => {\r\n    if (phone.length <= 4) return phone;\r\n    return `${phone.slice(0, -4).replace(/./g, '*')}${phone.slice(-4)}`;\r\n  };\r\n\r\n  // Render different forms based on state\r\n  const renderForm = () => {\r\n    if (showResetPassword) {\r\n      return (\r\n        <>\r\n          <h2 className=\"auth-title\">Reset Password</h2>\r\n          <p className=\"auth-subtitle\">Enter your new password</p>\r\n          <form className=\"auth-form\" onSubmit={handleSubmit(handleResetPassword)}>\r\n            <InputField \r\n              label=\"New Password\" \r\n              type=\"password\" \r\n              id=\"newPassword\" \r\n              showToggle \r\n              showPassword={showNewPassword} \r\n              togglePassword={() => setShowNewPassword(!showNewPassword)} \r\n              registerProps={register(\"newPassword\", { \r\n                required: \"New password is required\", \r\n                minLength: { value: 6, message: \"Password must be at least 6 characters\" } \r\n              })} \r\n              error={errors.newPassword} \r\n            />\r\n            <InputField \r\n              label=\"Confirm New Password\" \r\n              type=\"password\" \r\n              id=\"confirmNewPassword\" \r\n              showToggle \r\n              showPassword={showConfirmNewPassword} \r\n              togglePassword={() => setShowConfirmNewPassword(!showConfirmNewPassword)} \r\n              registerProps={register(\"confirmNewPassword\", { \r\n                required: \"Confirm new password is required\", \r\n                validate: (val) => val === watch(\"newPassword\") || \"Passwords do not match\" \r\n              })} \r\n              error={errors.confirmNewPassword} \r\n            />\r\n            <button type=\"submit\" className=\"auth-button\" disabled={loading}>\r\n              {loading ? (\r\n                <span className=\"button-loading\">\r\n                  <span className=\"spinner\"></span>\r\n                  Resetting...\r\n                </span>\r\n              ) : (\r\n                \"Reset Password\"\r\n              )}\r\n            </button>\r\n          </form>\r\n          <button \r\n            type=\"button\" \r\n            onClick={backToLogin}\r\n            className=\"back-to-login\"\r\n          >\r\n            ← Back to Login\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (showForgotPassword) {\r\n      return (\r\n        <>\r\n          <h2 className=\"auth-title\">Forgot Password</h2>\r\n          <p className=\"auth-subtitle\">Enter your email to receive a reset link</p>\r\n          <form className=\"auth-form\" onSubmit={handleSubmit(handleForgotPassword)}>\r\n            <InputField \r\n              label=\"Email\" \r\n              type=\"email\" \r\n              id=\"forgotEmail\" \r\n              registerProps={register(\"email\", { required: \"Email is required\" })} \r\n              error={errors.email} \r\n            />\r\n            <button type=\"submit\" className=\"auth-button\" disabled={loading}>\r\n              {loading ? (\r\n                <span className=\"button-loading\">\r\n                  <span className=\"spinner\"></span>\r\n                  Sending...\r\n                </span>\r\n              ) : (\r\n                \"Send Reset Link\"\r\n              )}\r\n            </button>\r\n          </form>\r\n          <button \r\n            type=\"button\" \r\n            onClick={backToLogin}\r\n            className=\"back-to-login\"\r\n          >\r\n            ← Back to Login\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n\r\n    if (isRegister) {\r\n      return (\r\n        <>\r\n          <h2 className=\"auth-title\">Register</h2>\r\n          <p className=\"auth-subtitle\">Create an account to get started</p>\r\n          {!showOtpField ? (\r\n            <form className=\"auth-form\" onSubmit={handleSubmit(handleRegistration)}>\r\n              <InputField label=\"Name\" type=\"text\" id=\"name\" registerProps={register(\"name\", { required: \"Name is required\" })} error={errors.name} />\r\n              <InputField label=\"Email\" type=\"email\" id=\"email\" registerProps={register(\"email\", { required: \"Email is required\" })} error={errors.email} />\r\n              <InputField label=\"Phone\" type=\"tel\" id=\"phone\" registerProps={register(\"phone\", { required: \"Phone is required\" })} error={errors.phone} />\r\n              <InputField label=\"Password\" type=\"password\" id=\"password\" showToggle showPassword={showPassword} togglePassword={() => setShowPassword(!showPassword)} registerProps={register(\"password\", { required: \"Password is required\", minLength: { value: 6, message: \"Password must be at least 6 characters\" } })} error={errors.password} />\r\n              <InputField label=\"Confirm Password\" type=\"password\" id=\"confirmPassword\" showToggle showPassword={showPassword} togglePassword={() => setShowPassword(!showPassword)} registerProps={register(\"confirmPassword\", { required: \"Confirm password is required\", validate: (val) => val === watch(\"password\") || \"Passwords do not match\" })} error={errors.confirmPassword} />\r\n              <button type=\"submit\" className=\"auth-button\" disabled={loading}>\r\n                {loading ? (\r\n                  <span className=\"button-loading\">\r\n                    <span className=\"spinner\"></span>\r\n                    Registering...\r\n                  </span>\r\n                ) : (\r\n                  \"Register\"\r\n                )}\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <div className=\"otp-section\">\r\n              <div className=\"otp-header\">\r\n                <div className=\"otp-icon\">📱</div>\r\n                <h3 className=\"otp-title\">Verify Your Phone Number</h3>\r\n                <p className=\"otp-subtitle\">\r\n                  We've sent a 6-digit code to<br />\r\n                  <strong>{formatPhoneNumber(phoneNumber)}</strong>\r\n                </p>\r\n              </div>\r\n              \r\n              <form onSubmit={verifyOtp} className=\"otp-form\">\r\n                <div className=\"otp-inputs-container\">\r\n                  <div className=\"otp-inputs\">\r\n                    {enteredOtp.map((val, i) => (\r\n                      <input \r\n                        key={i} \r\n                        type=\"text\" \r\n                        inputMode=\"numeric\"\r\n                        pattern=\"[0-9]*\"\r\n                        maxLength=\"1\" \r\n                        value={val} \r\n                        onChange={(e) => handleOtpChange(e.target.value, i)}\r\n                        onKeyDown={(e) => handleOtpKeyDown(e, i)}\r\n                        onPaste={i === 0 ? handleOtpPaste : undefined}\r\n                        id={`otp-input-${i}`} \r\n                        className={`otp-input ${otpError ? 'error' : ''} ${val ? 'filled' : ''}`}\r\n                        autoComplete=\"off\"\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                  {otpError && (\r\n                    <div className=\"otp-error\">\r\n                      <span className=\"error-icon\">⚠️</span>\r\n                      {otpError}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <button \r\n                  type=\"submit\" \r\n                  className=\"auth-button otp-verify-btn\" \r\n                  disabled={loading || enteredOtp.join(\"\").length !== 6}\r\n                >\r\n                  {loading ? (\r\n                    <span className=\"button-loading\">\r\n                      <span className=\"spinner\"></span>\r\n                      Verifying...\r\n                    </span>\r\n                  ) : (\r\n                    \"Verify OTP\"\r\n                  )}\r\n                </button>\r\n              </form>\r\n              \r\n              <div className=\"otp-footer\">\r\n                <p className=\"otp-help-text\">Didn't receive the code?</p>\r\n                <button \r\n                  type=\"button\"\r\n                  onClick={resendOtp} \r\n                  disabled={otpCooldown > 0 || loading}\r\n                  className=\"resend-button\"\r\n                >\r\n                  {otpCooldown > 0 ? (\r\n                    <span>\r\n                      <span className=\"cooldown-icon\">⏱️</span>\r\n                      Resend in {otpCooldown}s\r\n                    </span>\r\n                  ) : (\r\n                    <span>\r\n                      <span className=\"resend-icon\">📤</span>\r\n                      Resend OTP\r\n                    </span>\r\n                  )}\r\n                </button>\r\n                \r\n                {otpAttempts > 2 && (\r\n                  <div className=\"otp-warning\">\r\n                    <span className=\"warning-icon\">🚨</span>\r\n                    Multiple failed attempts. Please check your phone number or contact support.\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <button \r\n                type=\"button\" \r\n                onClick={toggleForm}\r\n                className=\"back-to-login\"\r\n              >\r\n                ← Back to Login\r\n              </button>\r\n            </div>\r\n          )}\r\n          <p className=\"toggle-message\">Already have an account? <button onClick={toggleForm}>Log in</button></p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    // Default login form\r\n    return (\r\n      <>\r\n        <h2 className=\"auth-title-log\">Log In</h2>\r\n        <form className=\"auth-form-log\" onSubmit={handleSubmit(handleLogin)}>\r\n          <InputField label=\"Email\" type=\"email\" id=\"loginEmail\" registerProps={register(\"email\", { required: \"Email is required\" })} error={errors.email} />\r\n          <InputField label=\"Password\" type=\"password\" id=\"loginPassword\" showToggle showPassword={showLoginPassword} togglePassword={() => setShowLoginPassword(!showLoginPassword)} registerProps={register(\"password\", { required: \"Password is required\" })} error={errors.password} />\r\n          <button type=\"submit\" className=\"auth-button\" disabled={loading}>\r\n            {loading ? (\r\n              <span className=\"button-loading\">\r\n                <span className=\"spinner\"></span>\r\n                Logging in...\r\n              </span>\r\n            ) : (\r\n              \"Login\"\r\n            )}\r\n          </button>\r\n        </form>\r\n        <div className=\"auth-links\">\r\n          <button \r\n            type=\"button\" \r\n            onClick={showForgotPasswordForm}\r\n            className=\"forgot-password-link\"\r\n          >\r\n            Forgot Password?\r\n          </button>\r\n        </div>\r\n        <p className=\"toggle-message-log\">Don't have an account? <button onClick={toggleForm}>Register</button></p>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <Seo \r\n        title={showResetPassword ? \"Reset Password\" : showForgotPassword ? \"Forgot Password\" : isRegister ? \"Register\" : \"Login\"} \r\n        description={showResetPassword ? \"Reset your password\" : showForgotPassword ? \"Reset your password\" : isRegister ? \"Create your account\" : \"Log in to your account\"} \r\n        page={showResetPassword ? \"Reset Password\" : showForgotPassword ? \"Forgot Password\" : isRegister ? \"Register\" : \"Login\"} \r\n        keywords=\"wealth, financial freedom, risk management, strategies\" \r\n      />\r\n      <Header />\r\n      <div className=\"main-login\">\r\n        <div className=\"auth-card\">\r\n          <div className=\"logo-section1\">\r\n            <img src={logo1} alt=\"Logo\" className=\"logo1-img\" />\r\n            <h1 className=\"brand-name\">TheCapitalTree</h1>\r\n          </div>\r\n\r\n          {renderForm()}\r\n        </div>\r\n\r\n        <div className=\"loginAnimation\">\r\n          <img src={loginAnimation} alt=\"Login Graphic\" height=\"300\" width=\"360\" />\r\n          <h2>Welcome To <img src={logo6} alt=\"\" height=\"35\" className=\"welcomelogo\" /> TheCapitalTree</h2>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n      <ToastContainer position=\"top-right\" autoClose={3000} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginRegister;"],"names":["Footer","_jsxs","className","children","_jsx","src","footerLogo","alt","title","loading","href","target","rel","FaPhone","FaMapMarkerAlt","FaEnvelope","Link","to","FaLinkedin","FaFacebook","FaInstagram","FaTwitter","Header","menuOpen","setMenuOpen","useState","closeMenu","onClick","logo","height","width","toggleMenu","id","_ref","description","page","keywords","Helmet","name","content","baseUrl","process","ADMIN_EMAILS","InputField","label","type","registerProps","error","showToggle","showPassword","togglePassword","htmlFor","style","position","placeholder","toLowerCase","right","top","transform","background","border","cursor","fontSize","color","message","_ref2","onLoginSuccess","isRegister","setIsRegister","showOtpField","setShowOtpField","showForgotPassword","setShowForgotPassword","showResetPassword","setShowResetPassword","enteredOtp","setEnteredOtp","Array","fill","phoneNumber","setPhoneNumber","isOtpVerified","setIsOtpVerified","registrationData","setRegistrationData","setShowPassword","showLoginPassword","setShowLoginPassword","showNewPassword","setShowNewPassword","showConfirmNewPassword","setShowConfirmNewPassword","setLoading","otpCooldown","setOtpCooldown","otpError","setOtpError","otpAttempts","setOtpAttempts","resetToken","setResetToken","navigate","useNavigate","searchParams","useSearchParams","register","handleSubmit","formState","errors","watch","reset","useForm","useEffect","token","localStorage","getItem","role","urlResetToken","get","onLogin","async","axios","post","email","data","password","payload","parseJwt","userRole","arguments","length","undefined","includes","getUserRole","user","userId","setItem","JSON","stringify","toast","success","_error$response","_error$response$data","console","response","handleLogin","handleForgotPassword","_error$response2","_error$response2$data","handleResetPassword","newPassword","replace","_error$response3","_error$response3$data","toggleForm","showForgotPasswordForm","backToLogin","setTimeout","_document$getElementB","document","getElementById","focus","timer","clearTimeout","handleRegistration","phone","confirmPassword","_error$response4","_error$response4$data","resendOtp","_document$getElementB2","_error$response5","_error$response5$data","handleOtpPaste","e","preventDefault","paste","clipboardData","getData","slice","newOtp","i","nextEmptyIndex","findIndex","digit","focusIndex","_document$getElementB7","verifyOtp","otpValue","otp","join","_error$response6","_error$response6$data","errorMessage","prev","_document$getElementB8","base64","split","parse","atob","Seo","logo1","renderForm","_Fragment","onSubmit","required","minLength","value","validate","val","confirmNewPassword","disabled","map","inputMode","pattern","maxLength","onChange","handleOtpChange","index","sanitizedValue","_document$getElementB3","every","onKeyDown","handleOtpKeyDown","_document$getElementB5","_document$getElementB6","key","_document$getElementB4","onPaste","autoComplete","loginAnimation","logo6","ToastContainer","autoClose"],"sourceRoot":""}